Meanreversion <- function()
{ ##Simulations
  
  m <- mean(datagenic$diff)
  dvol <- sd(datagenic$diff)
  
  vectorsd <- seq(from = 0.52, to = 0.29, by = -(0.52-0.29)/182)
  
  vectorbetas <- seq(from = -0.5020259, to = beta, by = (0.5020259+beta)/182)
  
  rnorm <- as.data.frame(rnorm(183, mean = m, sd = vectorsd))
  
  
  
  for (i in 1:1000)  {
    rnorm[,i] <- rnorm(183, mean = m, sd = vectorsd)
  }
  
  simulations <- rep(0.01083709, 183)
  
  ###1000 simulations
  
  vector <- simulations
  
  for (j in 1:length(names(rnorm))) {
    
    for (i in 1:length(rnorm$V2)) {
      simulations[i+1] <- simulations[i]+rnorm[i,j]+(vectorbetas[i]*(simulations[i]-dgmean))
    }
    vector <- cbind(vector, simulations)
  }  
  
  vector <- as.data.frame(vector)
  names(vector) <- c(1:1001)
  
  plot(vector$`500`, type = "l", col = "red", ylim = c(-3,3))
  
  lines(datagenic$Transport.spread)
  
  ## Vector valuation
  
  vector <- as.matrix(vector[1:183,])
  
  payoffs <<- pmax(vector,0)
  
  value <<- mean(apply(payoffs, 1, mean))
  
  outcome <- payoffs[183,]
  
  
  value
  
}

averagepayoffs <- matrix(1, ncol = 1000, nrow = 183)

number <- rep(0,1000)

for (i in 1:1000) {
  Meanreversion()
  averagepayoffs[,i] <- apply(payoffs,1,mean)
  number[i] <- value
  print(i)
  print(length(averagepayoffs[,i]))
  print(length(apply(payoffs,1,mean)))
  print(value)
  print(mean(number[number != 0]))
}


mean(number)
